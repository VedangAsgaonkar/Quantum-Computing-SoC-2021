Lines end with a  ;

DATA TYPES:
https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/

CREATING CLASSICAL VARIABLES IN Q#
1)let : It creates immutable variables. Eg: let x = 1 ;
2)mutable: It creates mutable variables. Eg: mutable x = 1 ;
3)set: It alters mutable variables. Eg: set x = x + 1 ;

COMMENTS:
Only single line comments are allowed. 
// comments give single line comments
/// gives markdown documentation comments

CONDITIONALS:
Written as follows:
    if x==1 {
    //code
    }
    elif x > 3 {
    //code
    }
    else{
    //code
    }
    
ITERATIONS:
The for loop is used to iterate over the elements of an array or in a range. The loop
variable is immutable in code and local to the loop

for qubit in array_of_qubits{
    //code
}

for x in 0 .. 9 { // the .. operator is a both ends inclusive range
    //code
}

for x in 0 .. Length(array_of_qubits)-1{
    //code
}
    

CLASSICAL OPERATORS:
+ - * / % > < >= <= == != and or not ?: += -= *= /= %=
Additionaly the following are defined:
1) Copy and update:
    A w/ B <- C
    This returns the object A with its member B updated as C
    w/ is like a short form for "with"
    There is also a shorthand
    A w/= B<-C
    meaning
    A = A w/ B <- C
    
    The operator can also be used to manipulate a particular element or index of an array

2) Range:
    Written as start .. step .. stop
    Start is always inclusive. Stop is inclusive if it is possible to reach it from start by step sized steps
    We can also write start .. stop meaning step=1

